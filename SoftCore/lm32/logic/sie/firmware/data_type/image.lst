
image:     file format elf32-lm32

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000124  00000000  00000000  00000054  2**2
                  CONTENTS, ALLOC, LOAD, CODE
  1 .debug_abbrev 00000060  00000000  00000000  00000178  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_info   000000b1  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_line   000000db  00000000  00000000  00000289  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_frame  00000020  00000000  00000000  00000364  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000001b  00000000  00000000  00000384  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000020  00000000  00000000  0000039f  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    000000a5  00000000  00000000  000003bf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      00000011  00000000  00000000  00000464  2**0
                  CONTENTS, READONLY

Disassembly of section .text:

00000000 <_ftext>:
   0:	98 00 00 00 	xor r0,r0,r0
   4:	d0 00 00 00 	wcsr IE,r0
   8:	78 01 00 00 	mvhi r1,0x0
   c:	38 21 00 00 	ori r1,r1,0x0
  10:	d0 e1 00 00 	wcsr EBA,r1
  14:	f8 00 00 03 	calli 20 <_crt0>
  18:	34 00 00 00 	nop
  1c:	34 00 00 00 	nop

00000020 <_crt0>:
  20:	78 1c 00 00 	mvhi sp,0x0
  24:	3b 9c 0f fc 	ori sp,sp,0xffc
  28:	78 1a 00 00 	mvhi gp,0x0
  2c:	3b 5a 01 30 	ori gp,gp,0x130
  30:	78 01 00 00 	mvhi r1,0x0
  34:	38 21 01 24 	ori r1,r1,0x124
  38:	78 03 00 00 	mvhi r3,0x0
  3c:	38 63 01 24 	ori r3,r3,0x124

00000040 <.clearBSS>:
  40:	44 23 00 04 	be r1,r3,50 <.callMain>
  44:	58 20 00 00 	sw (r1+0),r0
  48:	34 21 00 04 	addi r1,r1,4
  4c:	e3 ff ff fd 	bi 40 <.clearBSS>

00000050 <.callMain>:
  50:	34 01 00 00 	mvi r1,0
  54:	34 02 00 00 	mvi r2,0
  58:	34 03 00 00 	mvi r3,0
  5c:	f8 00 00 0c 	calli 8c <main>

00000060 <irq_enable>:
  60:	34 01 00 01 	mvi r1,1
  64:	d0 01 00 00 	wcsr IE,r1
  68:	c3 a0 00 00 	ret

0000006c <irq_mask>:
  6c:	34 01 00 0f 	mvi r1,15
  70:	d0 21 00 00 	wcsr IM,r1
  74:	c3 a0 00 00 	ret

00000078 <irq_disable>:
  78:	34 01 00 00 	mvi r1,0
  7c:	d0 01 00 00 	wcsr IE,r1
  80:	c3 a0 00 00 	ret

00000084 <jump>:
  84:	c0 20 00 00 	b r1

00000088 <halt>:
  88:	e0 00 00 00 	bi 88 <halt>

0000008c <main>:
  data8  = (volatile unsigned char  *)(0x00000400);
  data16 = (volatile unsigned short *)(0x00000200);
  data32 = (volatile unsigned int   *)(0x00000300);

 
  *data8  = 0x44;
  8c:	34 01 04 00 	mvi r1,1024
  90:	34 04 00 44 	mvi r4,68
  94:	30 24 00 00 	sb (r1+0),r4
  data8++;
  *data8  = 0x66;
  98:	34 03 00 66 	mvi r3,102
  9c:	34 02 04 01 	mvi r2,1025
  a0:	30 43 00 00 	sb (r2+0),r3
  data8++;
  *data8  = 0x55;
  a4:	34 03 00 55 	mvi r3,85
  a8:	34 02 04 02 	mvi r2,1026
  ac:	30 43 00 00 	sb (r2+0),r3
  data8++;
  *data8  = 0x22;
  b0:	34 03 00 22 	mvi r3,34
  b4:	34 02 04 03 	mvi r2,1027
  b8:	30 43 00 00 	sb (r2+0),r3
  data8++;
  *data8  = 0x11;
  bc:	34 03 00 11 	mvi r3,17
  c0:	34 02 04 04 	mvi r2,1028
  c4:	30 43 00 00 	sb (r2+0),r3
 
  *data16 = 0x2020;
  c8:	34 03 20 20 	mvi r3,8224
  cc:	34 02 02 00 	mvi r2,512
  d0:	0c 43 00 00 	sh (r2+0),r3
  data16++;
  *data16 = 0x2121;
  d4:	34 03 21 21 	mvi r3,8481
  d8:	34 02 02 02 	mvi r2,514
  dc:	0c 43 00 00 	sh (r2+0),r3
  data16++;
  *data16 = 0x2222;
  e0:	34 05 22 22 	mvi r5,8738
  e4:	34 02 02 04 	mvi r2,516
  data16++;
 
  *data32 = 0x30303030;
  e8:	78 03 30 30 	mvhi r3,0x3030
 
  *data16 = 0x2020;
  data16++;
  *data16 = 0x2121;
  data16++;
  *data16 = 0x2222;
  ec:	0c 45 00 00 	sh (r2+0),r5
  data16++;
 
  *data32 = 0x30303030;
  f0:	38 63 30 30 	ori r3,r3,0x3030
  data32++;
  *data32 = 0x31313131;
  f4:	78 02 31 31 	mvhi r2,0x3131
  *data16 = 0x2121;
  data16++;
  *data16 = 0x2222;
  data16++;
 
  *data32 = 0x30303030;
  f8:	34 05 03 00 	mvi r5,768
  fc:	58 a3 00 00 	sw (r5+0),r3
  data32++;
  *data32 = 0x31313131;
 100:	38 42 31 31 	ori r2,r2,0x3131
 104:	34 03 03 04 	mvi r3,772
 108:	58 62 00 00 	sw (r3+0),r2
  data8              = (unsigned char volatile *)(0x00000400);
  no_volatile_data8  = (unsigned char  *)(0x00000800);

// Difference between volatile & no volatile

  *data8  = 0x44;
 10c:	30 24 00 00 	sb (r1+0),r4
  *data8  = 0x45;
 110:	34 02 00 45 	mvi r2,69
 114:	30 22 00 00 	sb (r1+0),r2
  *data8  = 0x46;
 118:	34 02 00 46 	mvi r2,70
 11c:	30 22 00 00 	sb (r1+0),r2
 120:	e0 00 00 00 	bi 120 <main+0x94>
