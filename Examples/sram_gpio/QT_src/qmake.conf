include(../../common/g++.conf)
include(../../common/linux.conf)
include(../../common/qws.conf)

# QMAKE_{INC,LIB}DIR_QT needs to be overridden,
# as they're set to $$[QT_INSTALL_{HEADERS,LIBS}] by default
# which are compiled into the qmake binary statically

OPENWRT_DIR   = "/home/cain/Embedded/ingenic/sakc/build/openwrt-xburst"
ROOTFS_DIR    = "$${OPENWRT_DIR}/staging_dir/target-mipsel_uClibc-0.9.32"
TOOLCHAIN_DIR = "$${OPENWRT_DIR}/staging_dir/toolchain-mipsel_gcc-4.3.3+cs_uClibc-0.9.32"
QT_BASE_DIR   = "$${OPENWRT_DIR}/build_dir/target-mipsel_uClibc-0.9.32/qt-everywhere-opensource-src-4.7.0-beta2"
INCDIR        = -I$${ROOTFS_DIR}/usr/include/freetype2  -I$${ROOTFS_DIR}/usr/include  -I$${ROOTFS_DIR}/include -I$${TOOLCHAIN_DIR}/usr/include  -I$${TOOLCHAIN_DIR}/include

TARGET_CROSS					= mipsel-openwrt-linux-uclibc-
QMAKE_INCDIR					= $${QT_BASE_DIR}/include
QMAKE_LIBDIR					= $${QT_BASE_DIR}/lib
QMAKE_INCDIR_QT      				= $${QT_BASE_DIR}/include
QMAKE_LIBDIR_QT       				= $${QT_BASE_DIR}/lib
QMAKE_MOC             				= $${QT_BASE_DIR}/bin/moc
QMAKE_UIC             				= $${QT_BASE_DIR}/bin/uic
QMAKE_CC					= $${TARGET_CROSS}gcc
QMAKE_CXX					= $${TARGET_CROSS}g++
QMAKE_AR					= $${TARGET_CROSS}ar cqs
QMAKE_OBJCOPY					= $${TARGET_CROSS}objcopy
QMAKE_RANLIB					= $${TARGET_CROSS}ranlib
QMAKE_CFLAGS					= -Os -pipe -mips32 -mtune=mips32 -funit-at-a-time -fhonour-copts -msoft-float $${INCDIR}
QMAKE_CXXFLAGS					= -Os -pipe -mips32 -mtune=mips32 -funit-at-a-time -fhonour-copts -msoft-float $${INCDIR}
QMAKE_LINK					= $${TARGET_CROSS}g++
QMAKE_LINK_C					= $${TARGET_CROSS}gcc
QMAKE_LFLAGS					= -L$${QT_BASE_DIR}/lib -L$${ROOTFS_DIR}/usr/lib -L$${ROOTFS_DIR}/lib -L/$${TOOLCHAIN_DIR}/usr/lib -L/$${TOOLCHAIN_DIR}/lib -Wl,-rpath-link=$${ROOTFS_DIR}/usr/lib

QMAKE_STRIP				=:
QMAKE_STRIPFLAGS_LIB			= # do not strip

load(qt_config)
